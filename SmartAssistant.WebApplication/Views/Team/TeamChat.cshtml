@model SmartAssistant.Shared.Models.Team.ChatViewModel

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>

<script>
    const teamId = @Model.TeamId;
    const userId = '@Model.UserId';

    // Use a local variable to ensure 'connection' is scoped and only declared once
    (function () {
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        // Start the SignalR connection and join the team chat
        connection.start().then(() => {
            console.log("SignalR connection established");
            connection.invoke("JoinTeamChat", teamId).catch(err => console.error("Failed to join chat:", err));
        }).catch(err => console.error("SignalR connection failed:", err));

        // Function to send a message
        window.sendMessage = function () {
            const messageContent = document.getElementById("messageInput").value;
            if (connection.state === "Connected") {
                connection.invoke("SendMessageToTeam", teamId, userId, messageContent)
                    .catch(err => console.error("Failed to send message:", err));
                document.getElementById("messageInput").value = "";  // Clear input after sending
            } else {
                console.error("SignalR connection is not active");
            }
        }

        // Handle receiving messages with username instead of userId
        connection.on("ReceiveMessage", function (username, messageContent) {
            const chatMessage = `<div><strong>${username}:</strong> ${messageContent}</div>`;
            document.getElementById("chatMessages").innerHTML += chatMessage;
        });


        // Load previous messages
        connection.on("LoadPreviousMessages", function (messages) {
            console.log("Messages received from server:", messages); // Debugging

            // Loop through the messages and display them
            messages.forEach(function (message) {
                console.log("Individual message:", message); // Debugging

                const username = message.UserName ? message.UserName : 'Unknown';
                const content = message.Content ? message.Content : '';

                const chatMessage = `<div><strong>${username}:</strong> ${content}</div>`;
                document.getElementById("chatMessages").innerHTML += chatMessage;
            });
        });

    })();
</script>

<!-- Chat UI -->
<div id="chatMessages"></div>  <!-- Messages will be displayed here -->
<input type="text" id="messageInput" placeholder="Type a message..." />
<button onclick="sendMessage()">Send</button>
