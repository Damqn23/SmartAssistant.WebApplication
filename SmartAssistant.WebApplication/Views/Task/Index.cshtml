@using SmartAssistant.Shared.Models.Task
@model IEnumerable<TaskModel>

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="display-6" style="color: #00c6ff;">Tasks</h2>
        <a href="@Url.Action("Create")" class="btn btn-success">Create New Task</a>
    </div>

    <table class="table table-hover table-bordered shadow-sm" style="background-color: #2a2a2a; color: #fff;">
        <thead style="background-color: #00c6ff; color: #fff;">
            <tr>
                <th>Description</th>
                <th>Due Date</th>
                <th>Is Completed</th>
                <th>
                    @* Add sorting links with Font Awesome icons *@
                    <a asp-action="Index" asp-route-sortOrder="priority_asc" style="color: #fff; text-decoration: none;">
                        Priority <i class="fas fa-sort-up"></i>
                    </a>
                    <a asp-action="Index" asp-route-sortOrder="priority_desc" style="color: #fff; text-decoration: none;">
                        <i class="fas fa-sort-down"></i>
                    </a>
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr style="background-color: #2a2a2a;">
                    <td>@item.Description</td>
                    <td>@item.DueDate.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>
                        @if (item.IsCompleted)
                        {
                            <span class="badge bg-success">Yes</span>
                        }
                        else
                        {
                            <span class="badge bg-warning text-dark">No</span>
                        }
                    </td>
                    <td>
                        <span class="badge @GetPriorityBadgeClass(item.Priority)">
                            @GetPriorityText(item.Priority)
                        </span>
                    </td>
                    <td>
                        <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-warning btn-sm me-2">Edit</a>
                        <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-danger btn-sm">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>
    /* Custom hover effect to avoid invisibility */
    .table-hover tbody tr:hover {
        background-color: #3c3c3c !important; /* A lighter dark shade for hover effect */
        color: #fff; /* Ensure text stays white */
    }

        /* Ensure links inside table are visible on hover */
        .table-hover tbody tr:hover a {
            color: #00c6ff; /* Accent color for links on hover */
        }

    /* Styling for sorting arrows */
    i.fas.fa-sort-up,
    i.fas.fa-sort-down {
        font-size: 0.85em; /* Adjust the size of the icons */
    }

    /* Space the sort arrows more */
    .table th a {
        margin-right: 5px;
    }
</style>

@functions {
    // Helper to get the textual representation of priority
    public string GetPriorityText(int priority)
    {
        switch (priority)
        {
            case 0: return "Low";
            case 1: return "Medium";
            case 2: return "High";
            default: return "Unknown";
        }
    }

    // Helper to get the CSS class based on priority
    public string GetPriorityBadgeClass(int priority)
    {
        switch (priority)
        {
            case 0: return "bg-success"; // Green badge for low priority
            case 1: return "bg-warning text-dark"; // Yellow badge for medium priority
            case 2: return "bg-danger"; // Red badge for high priority
            default: return "bg-secondary"; // Gray badge for unknown priority
        }
    }
}
